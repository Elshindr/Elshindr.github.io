<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProjetCned</name>
    </assembly>
    <members>
        <member name="T:ProjetCned.connexion.ConnexionBDD">
            <summary>
            Classe permettant la connexion à la base de données ainsi que l'exécution des requêtes sql
            </summary>
        </member>
        <member name="F:ProjetCned.connexion.ConnexionBDD.instance">
            <summary>
            Instance de la classe
            </summary>
        </member>
        <member name="F:ProjetCned.connexion.ConnexionBDD.connexion">
            <summary>
            objet de connexion à la BDD à partir d'une chaîne de connexion
            </summary>
        </member>
        <member name="F:ProjetCned.connexion.ConnexionBDD.commande">
            <summary>
            objet executant une requête SQL
            </summary>
        </member>
        <member name="F:ProjetCned.connexion.ConnexionBDD.curseur">
            <summary>
            objet contenant le résultat d'une requête sql de type select (curseur)
            </summary>
        </member>
        <member name="M:ProjetCned.connexion.ConnexionBDD.#ctor(System.String)">
            <summary>
            Constructeur privé de ConnexionBDD permettant la création de la connexion ainsi que son ouverture
            </summary>
            <param name="chaineConnexion">chaine de connexion</param>
        </member>
        <member name="M:ProjetCned.connexion.ConnexionBDD.GetInstance(System.String)">
            <summary>
            Créer une instance en singleton de la classe ConnexionBDD
            </summary>
            <param name="chaineConnexion"> chaine de connexion à la base de données </param>
            <returns>instance de la classe ConnexionBDD</returns>
        </member>
        <member name="M:ProjetCned.connexion.ConnexionBDD.ReqUpdate(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Exécuter une requête sql d'un autre type que select
            </summary>
            <param name="req">requête sql </param>
            <param name="parametres">dictionnaire contenant les différents parametres</param>
        </member>
        <member name="M:ProjetCned.connexion.ConnexionBDD.ReqSelect(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Exécuter une requête sql de type "select" puis valoriser le curseur
            </summary>
            <param name="req">requête sql</param>
            <param name="parametres">dictionnaire des requetes préparés</param>
        </member>
        <member name="M:ProjetCned.connexion.ConnexionBDD.Read">
            <summary>
            Lecture du curseur à la ligne suivante s'il n'est pas null
            </summary>
            <returns>false si fin de curseur atteinte</returns>
        </member>
        <member name="M:ProjetCned.connexion.ConnexionBDD.Field(System.String)">
            <summary>
            Retourne le contenu d'un champ dont le nom est passé en paramètre
            </summary>
            <param name="champ">nom du champ</param>
            <returns>valeur du champ</returns>
        </member>
        <member name="M:ProjetCned.connexion.ConnexionBDD.Close">
            <summary>
            Fermeture du curseur
            </summary>
        </member>
        <member name="T:ProjetCned.controleur.Controle">
            <summary>
            Gestion des interractions entre modèle et vue  
            </summary>
        </member>
        <member name="F:ProjetCned.controleur.Controle.frmConnexion">
            <summary>
            fenetre de connexion
            </summary>
        </member>
        <member name="M:ProjetCned.controleur.Controle.#ctor">
            <summary>
            Contructeur et ouverture de la fenetre FrmConnexion
            </summary>
        </member>
        <member name="M:ProjetCned.controleur.Controle.Authentification(System.String,System.String)">
            <summary>
            Methode de vérification de connexion, si vrai,
            ouverture de la fenetre FrmGestion
            </summary>
            <param name="log"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="M:ProjetCned.controleur.Controle.GetPersonnels">
            <summary>
            Recuperer puis retourner les infos du personnel de la base
            de données
            </summary>
            <returns>Liste et infos sur le personnel</returns>
        </member>
        <member name="M:ProjetCned.controleur.Controle.GetService">
            <summary>
            Récupérer puis retourner la liste des services
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProjetCned.controleur.Controle.GetAbsences(ProjetCned.modele.Personnel)">
            <summary>
            Récupérer puis retourner les infos d'un personnel sur ses absences
            </summary>
            <returns>Liste des absences</returns>
        </member>
        <member name="M:ProjetCned.controleur.Controle.AddPersonnel(ProjetCned.modele.Personnel)">
            <summary>
            Ajouter un personnel
            </summary>
            <param name="unpersonnel"></param>
        </member>
        <member name="M:ProjetCned.controleur.Controle.AddAbsence(ProjetCned.modele.Absence)">
            <summary>
            Ajouter une absence
            </summary>
            <param name="uneabs"></param>
        </member>
        <member name="M:ProjetCned.controleur.Controle.DelPersonnel(ProjetCned.modele.Personnel)">
            <summary>
            Supprimer un personnel
            </summary>
            <param name="unpersonnel"></param>
        </member>
        <member name="M:ProjetCned.controleur.Controle.DelAbs(ProjetCned.modele.Absence)">
            <summary>
            Supprimer une absence
            </summary>
            <param name="uneabs"></param>
        </member>
        <member name="M:ProjetCned.controleur.Controle.ModPersonnel(ProjetCned.modele.Personnel)">
            <summary>
            Modifier les informations d'un personnel
            </summary>
            <param name="unpersonnel"></param>
        </member>
        <member name="M:ProjetCned.controleur.Controle.ModAbsdebut(ProjetCned.modele.Absence)">
            <summary>
            Modifier la date d'entrée d'une absence
            </summary>
            <param name="uneabs"></param>
        </member>
        <member name="M:ProjetCned.controleur.Controle.ModAbs(ProjetCned.modele.Absence)">
            <summary>
            Modifier le motif et la date de fin d'une absence 
            </summary>
            <param name="uneabs"></param>
        </member>
        <member name="M:ProjetCned.controleur.Controle.GetMotifs">
            <summary>
            Récupérer la liste des motifs d'absence
            </summary>
            <returns></returns>
        </member>
        <member name="T:ProjetCned.dal.AccesConnexionBDD">
            <summary>
            Classe permettant la gestion des demandes sql
            </summary>
        </member>
        <member name="F:ProjetCned.dal.AccesConnexionBDD.chaineConnexion">
            <summary>
            Chaine de connexion à la base de donnée
            </summary>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.Authentification(System.String,System.String)">
            <summary>
            Verifie si les clés de connexion sont valides
            </summary>
            <param name="log">login</param>
            <param name="pwd">mot de passe</param>
            <returns>vrai si clés sont valides</returns>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.GetLePersonnel">
            <summary>
             Récupèrer la liste du personnel provenant de la Base de données
            </summary>
            <returns>La liste du personnel</returns>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.GetService">
            <summary>
            Demander la liste des services
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.GetLesAbsences(ProjetCned.modele.Personnel)">
            <summary>
            Afficher la liste des absences d'un personnel sélectionné, dans l'ordre
            inverse de la chronologie(la plus récente en premier).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.AddPersonnel(ProjetCned.modele.Personnel)">
            <summary>
            Ajouter un personnel
            </summary>
            <param name="unpersonnel">un personnel</param>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.AddAbsence(ProjetCned.modele.Absence)">
            <summary>
            Ajouter une absence
            </summary>
            <param name="uneabs">une absence</param>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.DelPersonnel(ProjetCned.modele.Personnel)">
            <summary>
            Supprimer un personnel
            </summary>
            <param name="unpersonnel">le personnel</param>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.DelAbs(ProjetCned.modele.Absence)">
            <summary>
            Supprimer une absence d'un personnel
            </summary>
            <param name="uneabs">une absence</param>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.ModPersonnel(ProjetCned.modele.Personnel)">
            <summary>
            Modifier un personnel
            </summary>
            <param name="unpersonnel"> un personnel</param>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.ModAbs(ProjetCned.modele.Absence)">
            <summary>
            Modifier une absence date de fin ou/et motif
            </summary>
            <param name="uneabs"> une absence</param>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.ModAbsdebut(ProjetCned.modele.Absence)">
            <summary>
            Modifier une absence date d'entrée en absence
            </summary>
            <param name="uneabs"> une absence</param>
        </member>
        <member name="M:ProjetCned.dal.AccesConnexionBDD.GetMotif">
            <summary>
            Obtenir la liste des motifs d'absence
            </summary>
            <returns></returns>
        </member>
        <member name="T:ProjetCned.modele.Absence">
            <summary>
            Classe représentant les absences d'un personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Absence.idpersonnel">
            <summary>
            Propriété d'identifiant d'un personnel absent
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Absence.datedebut">
            <summary>
            Propriété date de début de l'absence
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Absence.datefin">
            <summary>
            Propriété date de fin de l'absence
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Absence.motif">
            <summary>
            Propriété du motif de l'absence
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Absence.idmotif">
            <summary>
            Propriété de l'identifiant du motif de l'absence
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Absence.Idpersonnel">
            <summary>
            Getter sur idpersonnel
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Absence.Datedebut">
            <summary>
            Getter sur datadebut
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Absence.Datefin">
            <summary>
            Getter sur datefin
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Absence.Motif">
            <summary>
            Getter sur motif
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Absence.Idmotif">
            <summary>
            Getter sur idmotif
            </summary>
        </member>
        <member name="M:ProjetCned.modele.Absence.#ctor(System.Int32,System.DateTime,System.DateTime,System.String,System.Int32)">
            <summary>
            Constructeur d'Absence et valorise ses propriétés
            </summary>
            <param name="idpersonnel"></param>
            <param name="datedebut"></param>
            <param name="datefin"></param>
            <param name="motif"></param>
            <param name="idmotif"></param>
        </member>
        <member name="T:ProjetCned.modele.Motif">
            <summary>
            Classe représentant les motifs d'absence d'un personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Motif.idmotif">
            <summary>
            Propriété d'identifiant d'un motif
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Motif.libelle">
            <summary>
            Propriété de libellé d'un motif
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Motif.Idmotif">
            <summary>
            Getter sur idmotif
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Motif.Libelle">
            <summary>
            Getter sur libelle
            </summary>
        </member>
        <member name="M:ProjetCned.modele.Motif.#ctor(System.Int32,System.String)">
            <summary>
            Constructeur de Motif et valorise ses propriétés
            </summary>
            <param name="idmotif"></param>
            <param name="libelle"></param>
        </member>
        <member name="M:ProjetCned.modele.Motif.ToString">
            <summary>
            Définir le libelle à afficher
            </summary>
            <returns></returns>
        </member>
        <member name="T:ProjetCned.modele.Personnel">
            <summary>
            Classe représentant le personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Personnel.idpersonnel">
            <summary>
            Propriété identifiant du personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Personnel.nom">
            <summary>
            Propriété du nom d'un personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Personnel.prenom">
            <summary>
            Propriété du prenom d'un personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Personnel.tel">
            <summary>
            Propriété du tel d'un personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Personnel.mail">
            <summary>
            Propriété du mail d'un personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Personnel.idservice">
            <summary>
            Propriété de l'identifiant du service d'un personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Personnel.service">
            <summary>
            Propriété du service d'un personnel
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Personnel.Idpersonnel">
            <summary>
            Getter sur idpersonnel
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Personnel.Nom">
            <summary>
            Getter sur nom
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Personnel.Prenom">
            <summary>
            Getter sur prenom
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Personnel.Tel">
            <summary>
            Getter sur tel
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Personnel.Mail">
            <summary>
            Getter sur mail
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Personnel.Idservice">
            <summary>
            Getter sur idservice
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Personnel.Service">
            <summary>
            Getter sur service
            </summary>
        </member>
        <member name="M:ProjetCned.modele.Personnel.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Constructeur de la classe Personnel et valorise ses propriétes
            </summary>
            <param name="idpersonnel"></param>
            <param name="nom"></param>
            <param name="prenom"></param>
            <param name="tel"></param>
            <param name="mail"></param>
            <param name="idservice"></param>
            <param name="service"></param>
        </member>
        <member name="T:ProjetCned.modele.Service">
            <summary>
            Classe des services du personnel
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Service.idservice">
            <summary>
            Variable identifiant des services
            </summary>
        </member>
        <member name="F:ProjetCned.modele.Service.nom">
            <summary>
            Variable du libelle d'un service
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Service.Idservice">
            <summary>
            Getter d'encapsulation d'idservice
            </summary>
        </member>
        <member name="P:ProjetCned.modele.Service.Nom">
            <summary>
            Getter d'encapsulation de nom
            </summary>
        </member>
        <member name="M:ProjetCned.modele.Service.#ctor(System.Int32,System.String)">
            <summary>
            Constructeur de service et valorise ses propriétés
            </summary>
            <param name="idservice"></param>
            <param name="nom"></param>
        </member>
        <member name="M:ProjetCned.modele.Service.ToString">
            <summary>
            Définir le nom du service n à afficher
            </summary>
            <returns>nom du service</returns>
        </member>
        <member name="T:ProjetCned.FrmConnexion">
            <summary>
            Fenêtre de connexion au programme
            </summary>
        </member>
        <member name="F:ProjetCned.FrmConnexion.controle">
            <summary>
            Instance du controleur
            </summary>
        </member>
        <member name="M:ProjetCned.FrmConnexion.#ctor(ProjetCned.controleur.Controle)">
            <summary>
            Recupere l'instance du controleur et initialisation des composants de la Frame
            </summary>
            <param name="controle"></param>
        </member>
        <member name="M:ProjetCned.FrmConnexion.btnconnexion_Click(System.Object,System.EventArgs)">
            <summary>
            Evénement du click sur connexion, 
            vérifie que les valeurs des textbox login et pwd sont correctes
            Sinon affiche un message d'erreur
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:ProjetCned.FrmConnexion.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:ProjetCned.FrmConnexion.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:ProjetCned.FrmConnexion.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:ProjetCned.Program">
            <summary>
            Point d'entrée principal de l'application.
            </summary>
        </member>
        <member name="M:ProjetCned.Program.Main">
            <summary>
            Point d'entrée principal de l'application.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.absenceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.motifDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.personnelDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.responsableDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.serviceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.absenceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.motifRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.personnelRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.responsableRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.serviceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.absenceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.motifRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.personnelRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.responsableRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSet.serviceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSetTableAdapters.absenceTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSetTableAdapters.motifTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSetTableAdapters.personnelTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSetTableAdapters.responsableTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSetTableAdapters.serviceTableAdapter">
             <summary>
            Represents the connection and commands used to retrieve and save data.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSetTableAdapters.TableAdapterManager">
             <summary>
            TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
            </summary>
        </member>
        <member name="M:ProjetCned.projetcnedDataSetTableAdapters.TableAdapterManager.UpdateUpdatedRows(ProjetCned.projetcnedDataSet,System.Collections.Generic.List{System.Data.DataRow},System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Update rows in top-down order.
            </summary>
        </member>
        <member name="M:ProjetCned.projetcnedDataSetTableAdapters.TableAdapterManager.UpdateInsertedRows(ProjetCned.projetcnedDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Insert rows in top-down order.
            </summary>
        </member>
        <member name="M:ProjetCned.projetcnedDataSetTableAdapters.TableAdapterManager.UpdateDeletedRows(ProjetCned.projetcnedDataSet,System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Delete rows in bottom-up order.
            </summary>
        </member>
        <member name="M:ProjetCned.projetcnedDataSetTableAdapters.TableAdapterManager.GetRealUpdatedRows(System.Data.DataRow[],System.Collections.Generic.List{System.Data.DataRow})">
             <summary>
            Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
            </summary>
        </member>
        <member name="M:ProjetCned.projetcnedDataSetTableAdapters.TableAdapterManager.UpdateAll(ProjetCned.projetcnedDataSet)">
             <summary>
            Update all changes to the dataset.
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSetTableAdapters.TableAdapterManager.UpdateOrderOption">
             <summary>
            Update Order Option
            </summary>
        </member>
        <member name="T:ProjetCned.projetcnedDataSetTableAdapters.TableAdapterManager.SelfReferenceComparer">
             <summary>
            Used to sort self-referenced table's rows
            </summary>
        </member>
        <member name="T:ProjetCned.vue.FrmGestion">
            <summary>
            Fenêtre d'affichage et de gestion du personnel et de leurs absences
            </summary>
        </member>
        <member name="F:ProjetCned.vue.FrmGestion.controle">
            <summary>
            Instance du controleur
            </summary>
        </member>
        <member name="F:ProjetCned.vue.FrmGestion.bdgPersonnel">
            <summary>
            Objet de gestion de la liste du personnel
            </summary>
        </member>
        <member name="F:ProjetCned.vue.FrmGestion.bdgService">
            <summary>
            Objet de gestion de la liste des services
            </summary>
        </member>
        <member name="F:ProjetCned.vue.FrmGestion.bdgAbs">
            <summary>
            Objet de gestion de la liste des absences
            </summary>
        </member>
        <member name="F:ProjetCned.vue.FrmGestion.bdgMotif">
            <summary>
            Objet de gestion de la liste des motifs d'absence
            </summary>
        </member>
        <member name="F:ProjetCned.vue.FrmGestion.ModifPers">
            <summary>
            Variable de gestion des enregistrements
            </summary>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.#ctor(ProjetCned.controleur.Controle)">
            <summary>
            Initialisation des composants graphiques
            Récupération de l'instance du controleur
            Initialisation de l'affichage
            </summary>
            <param name="controle">instance du controleur</param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.Init">
            <summary>
            Rend non accessible les groupes absence et gestion du personnel
            Affiche
            </summary>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.AfficherListePersonnel">
            <summary>
            Initialisation de la liste du personnel et affiche la liste du personnel
            </summary>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.AfficherService">
            <summary>
            Afficher  la liste des services dans cobService
            </summary>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnAjouterPers_Click(System.Object,System.EventArgs)">
            <summary>
            Event Click sur Ajouter un personnel à la grille
            Rend accessible les boutons de gestion
            Récupére la liste des services
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnEnregistrerPers_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement click sur btnEnregisterPers
            Gére l'enregistrement des données saisies
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnAnnulerPers_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement click sur btnAnnulerPers
            Gére l'annulation d'un ajout
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.ViderPers">
            <summary>
            Vider les champs de textes
            </summary>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnSupprPers_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement click sur btnSupprPers
            Gére la suppression d'un personnel apres validation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnModifierPers_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement Click sur btnModifierPers
            Gére les zones d'affichages pour la modification d'un personnel sélectionné
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnGestionAbs_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement click sur btnGestionAbs
            Gére l'affichage des groupes
            Appelle les méthodes d'affichage des absences et motif
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.AfficherAbs(ProjetCned.modele.Personnel)">
            <summary>
            Afficher la liste des abscences d'un personnel dans dataAbsence
            </summary>
            <param name="unpersonnel"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.AfficherMotif">
            <summary>
            Afficher la liste des motifs dans cobMotif
            </summary>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnAjouterAbs_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement click sur btnAjouterAbs
            Gére l'affichage des zones de saisies
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnEnregistrerAbs_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement click btnEnregistrerAbs
            Enregistre les données saisies et met l'affichage à jour
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnAnnulerAbs_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement Click  sur btnAnnulerAbs
            Annuler la saisie d'une absence
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.ViderAbs">
            <summary>
            Vider les saisies et fermer le grpGestionAbs
            </summary>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnSupprAbs_Click(System.Object,System.EventArgs)">
            <summary>
            Evenement click sur btnSupprAbs
            Supprimer une absence d'un personnel
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.btnModifierAbs_Click(System.Object,System.EventArgs)">
            <summary>
            Event click sur btnModifierAbs
            Gerer la modification d'une absence selectionné
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:ProjetCned.vue.FrmGestion.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ProjetCned.vue.FrmGestion.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ProjetCned.Properties.Resources">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:ProjetCned.Properties.Resources.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:ProjetCned.Properties.Resources.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
    </members>
</doc>
